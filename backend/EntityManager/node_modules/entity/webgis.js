/*
 *    Date: 
 *  Author: 
 * Project: 
 *
 * 
 */

var entityTemplate = require("../../lib/entityTemplate").entityTemplate;
var async = require("async");
var util = require("util");
var fs = require("fs");

var self = {};

var webgis = function(schema)
{
  webgis.super_.call(this);

  this.moduleName = "Entity.webgis";
  this.entityName = "webgis";
  this.schemaName = schema;
  this.tableName = "wg_map";

  this.entityId = "id";
  this.entityIdType = this.crudUtils.INTEGER;
}

/*
 * Inheritance
 */
util.inherits(webgis, entityTemplate);

webgis.prototype.init = function(opt)
{
  // Store this object
  self = this;

  // Init parent
  webgis.super_.prototype.init.call(self, opt);
}

/*
 * New methods
 */
webgis.prototype.serialId = function(opt,callback)
{
  var qOpt = {queryString: "select nextval('"+self.schemaName+".webgis_seq')"};

  self.crud.select(qOpt,[],function(err,res)
  {
    var retObj = {};

    if (res && res.result && res.result.length)
      retObj = {result: res.result[0].nextval*1};

    callback(err,retObj);
  });
}

webgis.prototype.getDbConfig = function(opt,callback)
{
  var retObj = {
    map: null,
    layers: {base:null, categories:null}
  };

  // Get webgis sub-entity
  var rsysEnt = self.entityHolder.getEntity("wgMapRS");
  var toolEnt = self.entityHolder.getEntity("wgMapTools");
  var bMapEnt = self.entityHolder.getEntity("wgBaseMap");
  var catEnt = self.entityHolder.getEntity("wgCategory");

  if (!rsysEnt || !toolEnt || !bMapEnt || !catEnt)
  {
    callback({message:"Cannot retrieve webgis sub-entity"},null);
    return;
  }

  // List all tasks needed to build config
  var tasks = {
    map: function(cb) {self.master(opt,cb);},
    rSys: function(cb) {rsysEnt.master(opt,cb);},
    tool: function(cb) {toolEnt.getConfig(opt,cb);},
    bMap: function(cb) {bMapEnt.getConfig(opt,cb);},
    cat: function(cb) {catEnt.getConfig(opt,cb);}
  };

  // Exec tasks
  async.parallelLimit(tasks,1,function(err,res)
  {
    if (err)
    {
      callback(err,null);
      return;
    }

    // Prepare response
    retObj.map = res.map.result.length ? res.map.result[0] : {};
    retObj.map.sr = res.rSys.result;
    retObj.map.tools = res.tool;
    retObj.layers.base = res.bMap;
    retObj.layers.categories = res.cat;

    callback(null,retObj);
  });
}

/*
 * Retrieve webgis config file and adjust it based on user permissions.
 * If file not exists, try to read config from db.
 */
webgis.prototype.getConfig = function(opt,callback)
{
  var path = "../../node_modules/config/webgisConf.json";

  /* Check for config file */
  if (!fs.existsSync(path))
  {
    self.getDbConfig(opt,callback);
    return;
  }

  /* Read config file */
  fs.readFile(path,"utf8",function(err,content)
  {
    if (err)
    {
      self.log.error(self.moduleName+" - Cannot read config file: "+err.message);
      callback(err,null);
      return;
    }

    // Parse content
    var wgConf = null;

    try
    {
      wgConf = JSON.parse(content);
    }
    catch(pErr)
    {
      self.log.error(self.moduleName+" - Cannot parse config file: "+pErr.message);
      callback(pErr,null);
      return;
    }

    // Tools management
    var toolsPerm = opt.object.permTools;

    for (var idx=wgConf.map.tools.length-1; idx>=0; idx--)
    {
      if (wgConf.map.tools[idx].permId &&
          toolsPerm.indexOf(wgConf.map.tools[idx].permId) < 0)
        wgConf.map.tools.splice(idx,1);
    }

    // Layers management
    var layersPerm = opt.object.permLayers;

    for (var idx=wgConf.layers.categories.length-1; idx>=0; idx--)
    {
      if (wgConf.layers.categories[idx].permId &&
          layersPerm.indexOf(wgConf.layers.categories[idx].permId) < 0)
      {
        wgConf.layers.categories.splice(idx,1);
      }
      else
      {
        for (var jdx=wgConf.layers.categories[idx].layers.length-1; jdx>=0; jdx--)
        {
          if (wgConf.layers.categories[idx].layers[jdx].permId &&
              layersPerm.indexOf(wgConf.layers.categories[idx].layers[jdx].permId) < 0)
          {
            wgConf.layers.categories[idx].layers.splice(jdx,1);
          }
        }
      }
    }

    // Return webgis user configuration
    callback(null, wgConf);
  });
}

/*
 * Exports
 */
exports.webgis = webgis;
