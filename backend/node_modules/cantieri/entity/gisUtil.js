/*
 *    Date: 
 *  Author: 
 * Project: 
 *
 * 
 */

var entTemp = require(process.cwd()+"/../lib/entityTemplate").entityTemplate;
var util    = require("util");
var qstring = require("querystring");
var config  = require("config/config.json");

var self = {};

var gisUtil = function()
{
  gisUtil.super_.call(this);

  this.moduleName = "Entity gisUtil";
  this.entityName = "gisUtil";

}

/*
 * Inheritance.
 */
util.inherits(gisUtil,entTemp);

gisUtil.prototype.init = function(opt)
{
  self = this;
  gisUtil.super_.prototype.init.call(self,opt);
}

/*
 * Export
 */
exports.gisUtil = gisUtil;

/*
 * New methods
 */

/*
 * Return boundig box related to user authority
 */
gisUtil.prototype.getUserExtent = function(opt,callback)
{
  if (!opt.object.authId)
  {
    callback({message:"No authority id provided"},null);
    return;
  }

  /*
   * Exec query
   */
  var aValue = [{value: opt.object.authId}];
  var strQuery = "SELECT " +
    "st_xmin(st_extent(geom)) AS x_min, st_ymin(st_extent(geom)) AS y_min, " +
    "st_xmax(st_extent(geom)) AS x_max, st_ymax(st_extent(geom)) AS y_max, " +
    "find_srid('public','authority','geom') AS srid " +
    "FROM authority WHERE id = $1";

  self.crud.select({queryString:strQuery},aValue,callback);
}


