/*
 *    Date: 
 *  Author: 
 * Project: 
 *
 * 
 */

var ModuleName = "eventSender";

/* Module variable */
var _config = require("config/config.json");
var _httpClient = require("./httpClient");

var _log = null;

/*
 * Public function.
 */
function init(log)
{
  _log = log;
  _httpClient.init(log);
}

function postEvent(event)
{
  if (!event || !event.type)
  {
    _log.error(ModuleName + " - NULL event or NULL type");
    return;
  }

  if (!event.date)
    event.date = new Date().getTime();

  // Exec post
  var postOpt =
  {
    host: _config.EEngine.host,
    port: _config.EEngine.port,
    path: "/event/"+event.type,
    headers: {"content-type": "application/json"}
  };

  _httpClient.post(postOpt,JSON.stringify(event),function(res)
  {
    // Nothing to do (httpClient already log errors)
  });
}

/*
 * Function that:
 *
 *  - update emergency_plan table with last date section update
 *  - calculate percentage completion
 *  - send a custom event to update emergency plan summary page
 */
function postRefreshSummaryEvent(opt)
{
  if (!opt.sectionKey || !opt.epId)
  {
    _log.error(ModuleName + " - NULL sectionKey or emergency_plan_id");
    return;
  }

  var data = {
    sectionKey: opt.sectionKey
  };

  switch(opt.sectionKey)
  {
    case "IG":
      data.last_update_date_section_1 = new Date().getTime();
      break;
    case "SR":
      data.last_update_date_section_2 = new Date().getTime();
      break;
    case "SO":
      data.last_update_date_section_3 = new Date().getTime();
      break;
    case "MI":
      data.last_update_date_section_4 = new Date().getTime();
      break;
    case "SD":
      data.last_update_date_section_5 = new Date().getTime();
      break;
  }

  // Exec put to entity manager
  var emOpt =
  {
    host: _config.EWriter.host,
    port: _config.EWriter.port,
    path: "/emergencyPlan/updateSectionsData/" + opt.epId,
    headers: {
      [_config.Auth.cookieName]: _config.Auth.innerToken,
      "content-type": "application/json"
    }
  };

  _httpClient.put(emOpt, JSON.stringify(data), function(res)
  {
    if (!res)
    {
      _log.error(ModuleName + " - Cannot update last_update_date_section on emergency_plan");
    }

    // Exec post to event engine
    var event = {
      message: "Aggiornamento della pagina di riepilogo del piano comunale",
      source: "EntityManager",
      type: "refreshSummary",
      detail: {
        date: new Date().getTime(),
        sectionKey: opt.sectionKey,
        sio_id: opt.sioId,
        epId: opt.epId
      }
    };

    if (!event.date)
      event.date = new Date().getTime();

    var eeOpt =
    {
      host: _config.EEngine.host,
      port: _config.EEngine.port,
      path: "/event/"+event.type,
      headers: {"content-type": "application/json"}
    };

    _httpClient.post(eeOpt,JSON.stringify(event),function(res)
    {
      // Nothing to do (httpClient already log errors)
    });

  });

}


/*
 * Exports
 */
exports.init = init;
exports.postEvent = postEvent;
exports.postRefreshSummaryEvent = postRefreshSummaryEvent;
