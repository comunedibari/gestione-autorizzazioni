/*
 *    Date: 
 *  Author: 
 * Project: 
 *
 * 
 */

var _log4js = require("log4js");

/*
 * Method to create logger.
 * logPath: path to save log file
 * logFileName: log filename
 * category: category
 *
 * Return the log object
 */
exports.createLogger = function(logPath,logFileName,category)
{
  var log;

  const NODE_MAJOR_VERSION = process.versions.node.split('.')[0];

  if (NODE_MAJOR_VERSION < 10)
  {
    // IMPLEMENTATION WITH NODE v4.x
    _log4js.configure({
      appenders:
      [
        {
          type: "file",
          backups: 10,
          category: category,
          filename: logPath + logFileName,
          maxLogSize: 10*1024*1024
        },
        {
          type: "console",
          category: "console"
        }
      ]
    });

    log = _log4js.getLogger(category);
    log.setLevel("ALL");
    }
  else
  {
    // IMPLEMENTATION WITH NODE v10.x
    var appenders = {};
    var categories = {};

    appenders[category] = {
      type: "file",
      backups: 10,
      filename: logPath + logFileName,
      maxLogSize: 10*1024*1024
    };

    appenders["out"] = {
      type: "console",
      category: "console"
    };

    categories[category]  = {appenders: [category], level: 'info'};
    categories["default"] = {appenders: ['out'], level: 'info'};

    _log4js.configure({
      appenders: appenders,
      categories: categories
    });

    log = _log4js.getLogger(category);
  }

  return log;
}

/*
 * Get logger method.
 */
exports.getLogger = function(category)
{
  return _log4js.getLogger(category);
}
